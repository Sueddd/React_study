useEffect( () => {})
- useEffect는 기본적으로 인자를 callback함수로 받는다. 

useEffect의 두가지 형태 

(1) 인자로 하나의 콜백함수만 받는 경우  
    랜더링이 될 때 마다 실행
    (컴포턴트가 랜더링이 될 때마다 콜백이 실행)
    useEffect(() => {
        // 작업...
    });


(2) 첫번째 인자로 콜백함수, 두번째 인자로 배열을 받는 경우
    컴포넌트가 맨 처음 화면에 랜더링이 될 때 그리고 배열 요소 안의
    값이 바뀔 때만 실행이 된다. 
    만약 빈 배열을 전달해 준다면 컴포넌트가 맨처음 화면에 랜더링 될 때만 실행
    useEffect(() => {
        // 작업...
    }, [value]);

※ useEffect에서 어떤 서비스에 구독하는 코드를 넣었다면 
   이후에 구독을 해제하는 cleanUp 정리 작업을 해줘야 한다. 
   
   ex) 타이머를 멈추는 정리 작업, 이벤트를 등록했으면 제거하는 정리 작업 

   useEffect의 리턴값으로 함수를 넣어주면 된다.

   useEffect(() => {
    return () => {
        
    }
   }, []);
   - 함수를 리턴해주면 해당 컴포넌트가 unmount 될 때, 
     혹은 다음 랜더링 시 불릴 useEffect가 실행되기 이전에 
     그 함수가 실행이 된다. 


※ useEffect 예제 (timer) 문제 설명 

- Timer 함수 안의 useEffect는 인자로 빈배열을 줬기 때문에 
- timer 컴포넌트가 맨처음 브라우저에 랜더링이 됐을 때만 불리게 된다.
- 리턴되는 함수는 timer 컴포넌트가 unmount(화면에서 사라질 때) 실행이 된다. 
- 